{"version":3,"sources":["elements/spinner/styles.module.css","elements/customQuestionSelector/styles/index.module.scss","elements/spinner/index.tsx","lib/mobx/stores/trackerStore.ts","lib/mobx/stores/userStore.ts","lib/mobx/stores/uiStore.ts","lib/mobx/Provider.tsx","lib/mobx/stores/index.ts","lib/redux/types/auth.ts","lib/redux/actions/auth.ts","api/config.ts","api/users.ts","api/tracker.ts","api/index.ts","lib/redux/types/score.ts","lib/redux/actions/score.ts","lib/redux/selectors/auth.ts","lib/redux/types/profile.ts","lib/redux/actions/profile.ts","lib/redux/selectors/profile.ts","hooks/useLogout.ts","elements/user/index.tsx","views/base/index.tsx","hooks/useStore.ts","bus/tracker/components/dashboard/index.tsx","pages/dashboard/index.tsx","bus/user/components/login/config.ts","elements/customInput/index.tsx","hooks/useLogin.ts","bus/user/components/login/index.tsx","bus/user/components/registration/config.ts","hooks/useSignUp.ts","bus/user/components/registration/index.tsx","elements/customQuestionSelector/index.tsx","lib/redux/selectors/score.ts","hooks/useGetRecord.ts","bus/questions/components/Breakfast/index.tsx","bus/questions/components/Lunch/index.tsx","bus/questions/components/Dinner/index.tsx","bus/questions/components/Fruits/index.tsx","bus/questions/components/Vegetables/index.tsx","bus/questions/components/Junk/index.tsx","elements/customQuestionCheckboxes/index.tsx","bus/questions/components/Water/index.tsx","elements/customQuestionInput/index.tsx","bus/questions/components/Sleep/index.tsx","bus/user/components/profile/config.ts","bus/user/components/profile/index.tsx","hooks/useUpdateProfile.ts","hooks/useDeleteScore.ts","bus/questions/components/Coffee/index.tsx","bus/questions/components/Steps/index.tsx","navigation/book.tsx","pages/loginPage/index.tsx","pages/singUpPage/index.tsx","pages/profilePage/index.tsx","pages/breakfastPage/index.tsx","pages/coffeePage/index.tsx","pages/dinnerPage/index.tsx","pages/fruitsPage/index.tsx","pages/junkPage/index.tsx","pages/lunchPage/index.tsx","pages/sleepPage/index.tsx","pages/stepsPage/index.tsx","pages/vegetablesPage/index.tsx","pages/waterPage/index.tsx","navigation/index.tsx","lib/redux/reducers/auth.ts","lib/redux/reducers/score.ts","lib/redux/reducers/profile.ts","lib/redux/init/rootReducer.ts","lib/redux/init/middleware.ts","lib/redux/init/store.ts","lib/react-query/query-client.ts","index.tsx","elements/user/styles.module.scss","elements/customQuestionCheckboxes/styles/index.module.scss","bus/user/components/registration/styles/index.module.scss","bus/user/components/login/styles/index.module.scss","bus/tracker/components/dashboard/styles/index.module.scss","elements/customQuestionInput/styles/index.module.scss","bus/user/components/profile/styles/index.module.scss","views/base/styles/index.module.scss"],"names":["module","exports","Spinner","_ref","isLoading","spinnerJSX","_jsx","className","Styles","spinner","children","Loader","type","color","height","width","_Fragment","TrackerStore","constructor","root","this","makeAutoObservable","autoBind","UserStore","UiStore","store","trackerStore","userStore","uiStore","Context","createContext","authTypes","Object","freeze","SET_TOKEN","SET_ERROR","RESET_ERROR","authActions","setToken","token","payload","setError","message","error","resetError","users","getMe","async","Error","data","axios","get","headers","authorization","create","post","updateMe","put","login","email","password","credentials","window","btoa","logout","tracker","getScore","getRecord","params","URLSearchParams","kind","createRecord","record","value","updateRecord","_ref2","hash","removeAllRecords","delete","method","api","scoreTypes","SET_SCORE","SET_SCORE_ISLOADING","SET_RECORD_SCORE","GET_RECORD_SCORE","SET_UPDATE_SCORE","scoreActions","setScore","score","scoreIsLoading","setRecordScore","recordedScore","getRecordScore","setUpdateScore","setScoreAsync","dispatch","localStorage","getItem","setRecordScoreAsync","answer","setUpdateScoreAsync","recordHash","getToken","state","auth","getRecordedScore","profileTypes","SET_PROFILE","IS_LOADING","UPDATE_PROFILE","profileActions","setProfile","user","setIsLoading","updateProfile","setProfileAsync","getProfile","profile","UserProfile","useDispatch","navigate","useNavigate","localToken","useLogout","mutation","useMutation","useEffect","isSuccess","profileInfo","useSelector","userAvatarCX","cx","avatar","male","sex","female","userName","fname","lname","_jsxs","column","Link","name","to","onClick","mutateAsync","Base","props","scoreValue","pathname","useLocation","useContext","center","disabledWidget","isExact","matchPath","book","url","avatarCX","sidebar","contentCX","content","loaderCX","widgetJSX","widget","title","style","bottom","progress","fill","label","level1","level2","level3","level4","level5","homeLinkJSX","homeLink","wrap","header","DashboardQuestions","styles","dashboard","navigation","items","link","category0","description","category1","category2","category3","category4","category5","category6","category7","category8","category9","Dashboard","observer","schema","yup","shape","required","min","max","Input","placeholder","register","options","tag","input","optionJSX","map","option","defaultProps","LoginForm","useLogin","onError","response","status","setItem","form","useForm","mode","resolver","yupResolver","onSubmit","handleSubmit","reset","inputRow","formState","errors","loginLink","tooShortMessage","tooLongMessage","age","weight","SignUp","signUp","useSignUp","gender","setGender","useState","profileState","classNamesF","selected","classNamesM","registration","left","controls","clearData","right","CustomQuestionSelector","question","answer1","answer2","answer3","value1","value2","value3","valueRecord","setValueRecord","classNamesA1","classNamesA2","classNamesA3","answers","defaultValue","location","slice","disabled","sendAnswer","useGetRecord","Breakfast","Lunch","Dinner","Fruits","Vegetables","Junk","CustomQuestionCheckboxes","currentValue","setCurrentValue","cupJSX","Array","_","index","isSelected","cupCx","element","clickSelected","checkedKey","String","waterAmount","elements","size","Water","CustomQuestionInput","questions","onChange","event","target","Sleep","Profile","useUpdateProfile","info","_mutation$data","_mutation$data2","deleteScore","defaultValues","genderM","watch","clearAllRecords","Coffee","Steps","page","LoginPage","SignUpPage","ProfilePage","breakfast","BreakfastPage","coffee","CoffeePage","dinner","DinnerPage","fruits","FruitsPage","junk","JunkPage","lunch","LunchPage","sleep","SleepPage","steps","StepsPage","vegetables","VegetablesPage","water","WaterPage","RoutesComponent","routesJSX","values","Page","Route","path","Routes","Navigate","replace","initialState","errorMessage","rootReducer","combineReducers","arguments","length","undefined","action","createLogger","duration","collapsed","colors","prevState","nextState","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composeEnhancers","compose","middleware","thunk","createStore","applyMiddleware","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","configure","enforceActions","computedRequiresReaction","observableRequiresReaction","reactionRequiresObservable","render","Provider","QueryClientProvider","client","Router","document","getElementById"],"mappings":"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","file":"static/js/main.ece72066.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"styles_spinner__1uiLu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"question\":\"styles_question__sgw-d\",\"answers\":\"styles_answers__VaB2-\",\"answer\":\"styles_answer__31oYN\",\"selected\":\"styles_selected__19zw0\",\"sendAnswer\":\"styles_sendAnswer__3ZQ9w\"};","// Core\nimport { FC } from 'react';\nimport Loader from 'react-loader-spinner';\n\n// Styles\nimport Styles from './styles.module.css';\n\nexport const Spinner: FC<IPropTypes> = ({ isLoading }) => {\n    const spinnerJSX = isLoading && (\n        <div className = { Styles.spinner }>\n            <Loader\n                type = 'Triangle'\n                color = '#FD0E35'\n                height = { 60 }\n                width = { 60 } />\n        </div>\n    );\n\n    return (\n        <>\n            { spinnerJSX }\n        </>\n    );\n};\n\ninterface IPropTypes {\n    isLoading: boolean;\n}\n","// Core\nimport { makeAutoObservable } from 'mobx';\n\n// Types\nimport { RootStore } from '.';\n\nexport class TrackerStore {\n    root: RootStore;\n\n    constructor(root: RootStore) {\n        this.root = root;\n\n        makeAutoObservable(this, {}, { autoBind: true });\n    }\n}\n","// Core\nimport { makeAutoObservable } from 'mobx';\n\n// Types\nimport { RootStore } from '.';\n\nexport class UserStore {\n    root: RootStore;\n\n    constructor(root: RootStore) {\n        this.root = root;\n\n        makeAutoObservable(this, {}, { autoBind: true });\n    }\n}\n","// Core\nimport { makeAutoObservable } from 'mobx';\n\nexport class UiStore {\n    isLoading: boolean;\n\n    constructor() {\n        this.isLoading = false;\n\n        makeAutoObservable(this, {}, { autoBind: true });\n    }\n}\n","// Core\nimport { FC, createContext, ReactElement } from 'react';\n\n// Store\nimport { RootStore } from './stores';\n\nconst store = new RootStore();\n\nexport const Context = createContext<RootStore>(store);\n\nexport const Provider: FC<IPropTypes> = (props) => {\n    return (\n        <Context.Provider value = { store }>\n            { props.children }\n        </Context.Provider>\n    );\n};\n\ninterface IPropTypes {\n    children: ReactElement | ReactElement[]\n}\n","// Stores\nimport { TrackerStore } from './trackerStore';\nimport { UserStore } from './userStore';\nimport { UiStore } from './uiStore';\n\nexport class RootStore {\n    trackerStore: TrackerStore;\n    userStore: UserStore;\n    uiStore: UiStore;\n\n    constructor() {\n        this.trackerStore = new TrackerStore(this);\n        this.userStore = new UserStore(this);\n        this.uiStore = new UiStore();\n    }\n}\n","export const authTypes = Object.freeze({\n    SET_TOKEN:   'SET_TOKEN',\n    SET_ERROR:   'SET_ERROR',\n    RESET_ERROR: 'RESET_ERROR',\n});\n\n","import { authTypes } from '../types/auth';\n\nexport const authActions = Object.freeze({\n    setToken: (token: string) => {\n        return {\n            type:    authTypes.SET_TOKEN,\n            payload: token,\n        };\n    },\n\n    setError: (message: string) => {\n        return {\n            type:    authTypes.SET_ERROR,\n            error:   true,\n            payload: message,\n        };\n    },\n\n    resetError: () => {\n        return {\n            type: authTypes.RESET_ERROR,\n        };\n    },\n\n});\n","export const root = 'https://lab.lectrum.io/rtx/api/fitness';\n","import axios, { AxiosResponse } from 'axios';\nimport { ILoginFormShape, IProfileRequest } from '../types/index';\n// Core\n\n// Config\nimport { root } from './config';\n\n// Types\nimport { IProfile } from '../types';\n\nexport const users = {\n    getMe: async (token: string | null): Promise<IProfileRequest[]> => {\n        if (!token) {\n            throw new Error('токен не указан');\n        }\n\n        const data   = await axios.get<IProfileRequest[]>(`${root}/profile`, {\n            headers: {\n                authorization: `Bearer ${token}`,\n            },\n        });\n\n        return data?.data;\n    },\n    create: async (payload: IProfile): Promise<string> => {\n        const { data } = await axios.post<AxiosResponse<string>>(`${root}/users`, payload);\n\n        return data.data;\n    },\n    updateMe: async (payload: IProfile, token: string | null) => {\n        if (!token) {\n            throw new Error('токен не указан');\n        }\n\n        const { data } = await axios.put<AxiosResponse<IProfile>>(`${root}/users`, payload, {\n            headers: {\n                authorization: `Bearer ${token}`,\n            },\n        });\n\n        return data;\n    },\n    login: async (credentials: ILoginFormShape): Promise<string> => {\n        const { email, password } = credentials;\n        const { data } = await axios.get<AxiosResponse<string>>(`${root}/login`, {\n            headers: {\n                authorization: `Basic ${window.btoa(`${email}:${password}`)}`,\n            },\n        });\n\n        return data.data;\n    },\n    logout: async (token: string | null): Promise<void> => {\n        if (!token) {\n            throw new Error('токен не указан');\n        }\n\n        await axios.get(`${root}/logout`, {\n            headers: {\n                authorization: `Bearer ${token}`,\n            },\n        });\n    },\n};\n","// Core\nimport axios, { AxiosResponse } from 'axios';\n\n// Config\nimport { root } from './config';\n\n// Types\nimport { IRecord, IResponseRecord } from '../types';\n\nexport const tracker = {\n    getScore: async (token: string | null) => {\n        if (!token) {\n            throw new Error('токен не указан');\n        }\n\n        const { data } = await axios.get<AxiosResponse<number>>(`${root}/reports`, {\n            headers: {\n                authorization: `Bearer ${token}`,\n            },\n        });\n\n        return data.data;\n    },\n    getRecord: async (type: string, token: string | null) => {\n        if (!token) {\n            throw new Error('токен не указан');\n        }\n\n        const params = new URLSearchParams({\n            kind: type,\n        });\n\n        const { data } =  await axios.get<AxiosResponse<IResponseRecord>>(`${root}/records?${params}`, {\n            headers: {\n                authorization: `Bearer ${token}`,\n            },\n        });\n\n        return data;\n    },\n    createRecord: async ({ type, record }: IRecord, token: string | null) => {\n        if (!token) {\n            throw new Error('токен не указан');\n        }\n\n        const params = new URLSearchParams({\n            kind: type,\n        });\n\n        const { data } = await axios.post(`${root}/records?${params}`, {\n            value: record,\n        }, {\n            headers: {\n                authorization: `Bearer ${token}`,\n            },\n        });\n\n        return data;\n    },\n    updateRecord: async ({ type, record }: IRecord, hash: string, token: string | null) => {\n        if (!token) {\n            throw new Error('токен не указан');\n        }\n\n        const params = new URLSearchParams({\n            kind: type,\n        });\n\n        const { data } = await axios.put(`${root}/records/${hash}/?${params}`, {\n            value: record,\n        }, {\n            headers: {\n                authorization: `Bearer ${token}`,\n            },\n        });\n\n        return data;\n    },\n    removeAllRecords: async (token: string | null) => {\n        if (!token) {\n            throw new Error('токен не указан');\n        }\n\n        await axios.delete(`${root}/reports/reset`, {\n            method:  'DELETE',\n            headers: {\n                authorization: `Bearer ${token}`,\n            },\n        });\n    },\n};\n","// API\nimport { users } from './users';\nimport { tracker } from './tracker';\n\nexport const api = Object.freeze({\n    users,\n    tracker,\n});\n","export const scoreTypes = Object.freeze({\n    SET_SCORE:           'SET_SCORE',\n    SET_SCORE_ISLOADING: 'SET_SCORE_ISLOADING',\n\n    SET_RECORD_SCORE: 'SET_RECORD_SCORE',\n\n    GET_RECORD_SCORE: 'GET_RECORD_SCORE',\n\n    SET_UPDATE_SCORE: 'SET_UPDATE_SCORE',\n});\n","import { Dispatch } from 'redux';\nimport { IResponseRecord, IRecord } from '../../../types/index';\n\nimport { authActions } from './auth';\nimport { api } from '../../../api/index';\nimport { scoreTypes } from '../types/score';\n\nexport const scoreActions = Object.freeze({\n    setScore: (score: number) => {\n        return {\n            type:    scoreTypes.SET_SCORE,\n            payload: score,\n        };\n    },\n\n    scoreIsLoading: (value: boolean) => {\n        return {\n            type:    scoreTypes.SET_SCORE_ISLOADING,\n            payload: value,\n        };\n    },\n\n    setRecordScore: (recordedScore: IRecord | null) => {\n        return {\n            type:    scoreTypes.SET_RECORD_SCORE,\n            payload: recordedScore,\n        };\n    },\n\n    getRecordScore: (score: IResponseRecord) => {\n        return {\n            type:    scoreTypes.GET_RECORD_SCORE,\n            payload: score,\n        };\n    },\n    setUpdateScore: (record: IRecord) => {\n        return {\n            type:    scoreTypes.SET_UPDATE_SCORE,\n            payload: record,\n        };\n    },\n});\n\nexport const setScoreAsync = () => async (dispatch: Dispatch) => {\n    try {\n        dispatch(scoreActions.scoreIsLoading(true));\n        const token = localStorage.getItem('token');\n\n        const score = await api.tracker.getScore(token);\n\n        dispatch(scoreActions.setScore(score));\n    } catch (error) {\n        const { message } = error as Error;\n        dispatch(authActions.setError(message));\n    } finally {\n        dispatch(scoreActions.scoreIsLoading(false));\n    }\n};\n\nexport const setRecordScoreAsync = (record: IRecord, token: string | null) => async (dispatch: Dispatch) => {\n    try {\n        dispatch(scoreActions.scoreIsLoading(true));\n\n\n        const answer = await api.tracker.createRecord(record, token);\n\n        dispatch(scoreActions.setRecordScore(answer));\n    } catch (error) {\n        const { message } = error as Error;\n        dispatch(authActions.setError(message));\n    } finally {\n        dispatch(scoreActions.scoreIsLoading(false));\n    }\n};\n\n\nexport const setUpdateScoreAsync\n= (record: IRecord, recordHash: string) => async (dispatch: Dispatch) => {\n    try {\n        dispatch(scoreActions.scoreIsLoading(true));\n        const token = localStorage.getItem('token');\n\n        const score = await api.tracker.updateRecord(record, recordHash, token);\n\n        dispatch(scoreActions.setUpdateScore(score));\n    } catch (error) {\n        const { message } = error as Error;\n        dispatch(authActions.setError(message));\n    } finally {\n        dispatch(scoreActions.scoreIsLoading(false));\n    }\n};\n\nexport const getRecordScoreAsync = (kind: string) => async (dispatch: Dispatch) => {\n    try {\n        dispatch(scoreActions.scoreIsLoading(true));\n\n        const token = localStorage.getItem('token');\n\n        const { data } = await api.tracker.getRecord(kind, token);\n\n        dispatch(scoreActions.getRecordScore(data));\n    } catch (error) {\n        const { message } = error as Error;\n        dispatch(authActions.setError(message));\n    } finally {\n        dispatch(scoreActions.scoreIsLoading(false));\n    }\n};\n","import { RootState } from '../init/store';\n\nexport const getToken = (state: RootState) => {\n    return state.auth.token;\n};\n\nexport const getScore = (state: RootState) => {\n    return state.score.score;\n};\n\nexport const getScoreisLoading = (state: RootState) => {\n    return state.score.isLoading;\n};\n\nexport const getRecordedScore = (state: RootState) => {\n    return state.score.recordedScore;\n};\n","export const profileTypes = Object.freeze({\n    SET_PROFILE:    'SET_PROFILE',\n    IS_LOADING:     'IS_LOADING',\n    UPDATE_PROFILE: 'UPDATE_PROFILE',\n});\n","import { Dispatch } from 'redux';\nimport { IProfile, IProfileRequest } from '../../../types/index';\n\nimport { authActions } from './auth';\nimport { api } from '../../../api/index';\nimport { profileTypes } from '../types/profile';\n\n\nexport const profileActions = Object.freeze({\n    setProfile: (user: IProfileRequest[] | null) => {\n        return {\n            type:    profileTypes.SET_PROFILE,\n            payload: user,\n        };\n    },\n\n    setIsLoading: (value: boolean) => {\n        return {\n            type:    profileTypes.IS_LOADING,\n            payload: value,\n        };\n    },\n    updateProfile: (user: IProfile) => {\n        return {\n            type:    profileTypes.UPDATE_PROFILE,\n            payload: user,\n        };\n    },\n});\n\n\nexport const setProfileAsync = () => async (dispatch: Dispatch) => {\n    try {\n        dispatch(profileActions.setIsLoading(true));\n\n        const token = localStorage.getItem('token');\n\n        const user = await api.users.getMe(token);\n\n        dispatch(profileActions.setProfile(user));\n    } catch (error) {\n        const { message } = error as Error;\n        dispatch(authActions.setError(message));\n    } finally {\n        dispatch(profileActions.setIsLoading(false));\n    }\n};\n","import { RootState } from '../init/store';\n\nexport const getProfile = (state: RootState) => {\n    return state.profile.user;\n};\n\nexport const getIsLoading = (state: RootState): string => {\n    return state.profile.isLoading;\n};\n","import { useEffect } from 'react';\nimport { useMutation } from 'react-query';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { authActions } from '../lib/redux/actions/auth';\nimport { api } from '../api/index';\nimport { profileActions } from '../lib/redux/actions/profile';\n\nexport const useLogout = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const mutation = useMutation((token: string | null) => {\n        return api.users.logout(token);\n    });\n\n\n    useEffect(() => {\n        if (mutation.isSuccess) {\n            dispatch(authActions.setToken(''));\n            dispatch(profileActions.setProfile(null));\n\n            navigate('/login');\n        }\n    }, [mutation.isSuccess]);\n\n    return mutation;\n};\n","// Core\nimport { Link, useNavigate } from 'react-router-dom';\nimport cx from 'classnames';\nimport { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProfile } from '../../lib/redux/selectors/profile';\nimport { setProfileAsync } from '../../lib/redux/actions/profile';\n\n// styles\nimport Styles from './styles.module.scss';\n// hooks\nimport { useLogout } from '../../hooks/useLogout';\n\nexport const UserProfile = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const localToken = localStorage.getItem('token');\n    const logout = useLogout();\n    const profileInfo = useSelector(getProfile);\n    const userAvatarCX = cx([\n        Styles.avatar, {\n            [ Styles.male ]:   profileInfo?.sex === 'm',\n            [ Styles.female ]: profileInfo?.sex === 'f',\n        },\n    ]);\n\n    const onSubmit = async () => {\n        await logout.mutateAsync(localToken);\n        navigate('/login');\n    };\n\n    const userName = profileInfo ? `${profileInfo.fname}  ${profileInfo.lname}` : '';\n\n\n    useEffect(() => {\n        dispatch(setProfileAsync());\n    }, []);\n\n    return (\n        <div className = { userAvatarCX }>\n            <div className = { Styles.column }>\n                <Link className = { Styles.name } to = '/profile'>\n                    { userName }\n                </Link>\n                <button onClick = { onSubmit } className = { Styles.logout }>Выйти</button>\n            </div>\n        </div>\n    );\n};\n","// Core\nimport { FC, ReactElement, useEffect } from 'react';\nimport cx from 'classnames';\nimport {\n    Link, matchPath, useLocation, useNavigate,\n} from 'react-router-dom';\n\n// Book\nimport { useDispatch, useSelector } from 'react-redux';\nimport { book } from '../../navigation/book';\n\n// Styles\nimport Styles from './styles/index.module.scss';\n\n// Elements\nimport { Spinner } from '../../elements/spinner';\n\n// Hooks\nimport { useStore } from '../../hooks';\nimport { setScoreAsync } from '../../lib/redux/actions/score';\nimport { getScore, getToken } from '../../lib/redux/selectors/auth';\nimport {  setProfileAsync } from '../../lib/redux/actions/profile';\nimport { getProfile } from '../../lib/redux/selectors/profile';\nimport { UserProfile } from '../../elements/user';\n\nexport const Base: FC<IPropTypes> = (props) => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const token = useSelector(getToken);\n    const scoreValue = useSelector(getScore);\n    const profileInfo = useSelector(getProfile);\n    const { pathname } = useLocation();\n    const { uiStore } = useStore();\n\n    const { isLoading } = uiStore;\n    const {\n        children,\n        center,\n        disabledWidget,\n    } = props;\n\n    const isExact = matchPath(book.root.url, pathname);\n    // TODO; необходимо заменить на получаемые с сервера данные\n    const score = scoreValue;\n\n    // TODO; необходимо динамически менять значения в зависимости от выбранного при регистрации пола\n    const avatarCX = cx([\n        Styles.sidebar, {\n            [ Styles.male ]:   profileInfo?.sex === 'm',\n            [ Styles.female ]: profileInfo?.sex === 'f',\n        },\n    ]);\n\n\n    const contentCX = cx(Styles.content, {\n        [ Styles.center ]: center,\n    });\n\n    const loaderCX = isLoading && (\n        <Spinner isLoading = { isLoading } />\n    );\n\n\n    const widgetJSX = score !== null && !disabledWidget && (\n        <div className = { Styles.widget }>\n            <span className = { Styles.title }>Life Score</span>\n            <div className = { Styles.module }>\n                <span className = { Styles.score } style = { { bottom: `${score}%` } }>{ score }</span>\n                <div className = { Styles.progress }>\n                    <div className = { Styles.fill } style = { { height: `${score}%` } } />\n                </div>\n                <span className = { cx([Styles.label, Styles.level1]) }>Off Track</span>\n                <span className = { cx([Styles.label, Styles.level2]) }>Imbalanced</span>\n                <span className = { cx([Styles.label, Styles.level3]) }>Balanced</span>\n                <span className = { cx([Styles.label, Styles.level4]) }>Healthy</span>\n                <span className = { cx([Styles.label, Styles.level5]) }>Perfect Fit</span>\n            </div>\n        </div>\n    );\n\n    const homeLinkJSX = !isExact && (\n        <Link to = { book.root.url } className = { Styles.homeLink }>На главную</Link>\n    );\n\n\n    useEffect(() => {\n        if (!token) {\n            navigate('/login');\n        }\n        dispatch(setScoreAsync());\n        dispatch(setProfileAsync());\n    }, [scoreValue]);\n\n\n    return (\n        <section className = { Styles.profile }>\n            <div className = { avatarCX }>\n                { loaderCX }\n            </div>\n            <div className = { Styles.wrap }>\n                <div className = { Styles.header }>\n                    <div>\n                        { homeLinkJSX }\n                    </div>\n                    <UserProfile />\n                </div>\n                <div className = { contentCX }>\n                    { children }\n                    { widgetJSX }\n                </div>\n            </div>\n        </section>\n    );\n};\n\ninterface IPropTypes {\n    children: ReactElement | ReactElement[];\n    center?: boolean;\n    disabledWidget?: boolean;\n}\n","// Core\nimport { useContext } from 'react';\n\n// Other\nimport { Context } from '../lib/mobx/Provider';\n\nexport const useStore = () => {\n    const store = useContext(Context);\n\n    return store;\n};\n","// Core\nimport { Link } from 'react-router-dom';\n\n// styles\nimport styles from './styles/index.module.scss';\n\nexport const DashboardQuestions: React.FC = () => {\n    return (\n        <div className = { styles.dashboard }>\n            <div className = { styles.navigation }>\n                <h1>Как у тебя проходит день?</h1>\n                <div className = { styles.items }>\n                    <Link className = { `${styles.link} ${styles.category0}` } to = '/breakfast'>\n                        <span className = { styles.title }>Добавить завтрак</span>\n                        <span className = { styles.description }>Хороший завтра очень важен </span>\n                    </Link>\n\n                    <Link className = { `${styles.link} ${styles.category1}` } to = '/lunch'>\n                        <span className = { styles.title }>Добавить обед</span>\n                        <span className = { styles.description }>Успешные люди обедают</span>\n                    </Link>\n\n                    <Link className = { `${styles.link} ${styles.category2}` } to = '/dinner'>\n                        <span className = { styles.title }>Добавить ужин</span>\n                        <span className = { styles.description }>Лучше не ужинать вообще</span>\n                    </Link>\n\n                    <Link className = { `${styles.link} ${styles.category3}` } to = '/steps'>\n                        <span className = { styles.title }>Добавить активность</span>\n                        <span className = { styles.description }>Пешие прогулки это минимум</span>\n                    </Link>\n\n                    <Link className = { `${styles.link} ${styles.category4}` } to = '/fruits'>\n                        <span className = { styles.title }>Добавить фрукты</span>\n                        <span className = { styles.description }>Фрукты поднимают настроение</span>\n                    </Link>\n\n                    <Link className = { `${styles.link} ${styles.category5}` } to = '/vegetables'>\n                        <span className = { styles.title }>Добавить овощи</span>\n                        <span className = { styles.description }>Овощи очень важны</span>\n                    </Link>\n\n                    <Link className = { `${styles.link} ${styles.category6}` } to = '/junk'>\n                        <span className = { styles.title }>Добавить фастфуд</span>\n                        <span className = { styles.description }>Эта еда очень вредная</span>\n                    </Link>\n\n                    <Link className = { `${styles.link} ${styles.category7}` } to = '/water'>\n                        <span className = { styles.title }>Добавить воду</span>\n                        <span className = { styles.description }>Вода это жизнь</span>\n                    </Link>\n\n                    <Link className = { `${styles.link} ${styles.category8}` } to = '/sleep'>\n                        <span className = { styles.title }>Добавить сон</span>\n                        <span className = { styles.description }>Спать нужно всем</span>\n                    </Link>\n\n                    <Link className = { `${styles.link} ${styles.category9}` } to = '/coffee'>\n                        <span className = { styles.title }>Добавить кофе</span>\n                        <span className = { styles.description }>Можно и без него</span>\n                    </Link>\n\n                </div>\n            </div>\n        </div>\n    );\n};\n","// Core\nimport { FC } from 'react';\n\n// Views\nimport { observer } from 'mobx-react-lite';\nimport { Base } from '../../views/base';\n\n// components\nimport { DashboardQuestions } from '../../bus/tracker/components/dashboard';\n\n\nexport const Dashboard: FC = observer(() => {\n    return (\n        <>\n            <Base>\n                <DashboardQuestions />\n            </Base>\n        </>\n    );\n});\n","import * as yup from 'yup';\n\n// eslint-disable-next-line no-template-curly-in-string\nconst tooShortMessage = 'минимальная длина = ${min} символов';\n\n// eslint-disable-next-line no-template-curly-in-string\nconst tooLongMessage = 'максимальная длина = ${min} символов';\n\nexport const schema = yup.object().shape({\n    email: yup\n        .string()\n        .email()\n        .required('*'),\n    password: yup\n        .string()\n        .min(8, tooShortMessage)\n        .max(16, tooLongMessage)\n        .required('*'),\n});\n","import { UseFormRegisterReturn } from 'react-hook-form';\nimport styles from '../../bus/user/components/registration/styles/index.module.scss';\n\nexport const Input: React.FC<IInputPropsTypes> = ({\n    placeholder, type, register, options, tag, error, label,\n}: IInputPropsTypes) => {\n    let input = (\n        <input\n            placeholder = { placeholder }\n            type = { type }\n            { ...register } />\n    );\n\n    if (tag === 'textarea') {\n        input = (\n            <textarea\n                placeholder = { placeholder }\n                { ...register }>\n\n            </textarea>\n        );\n    }\n\n    if (tag === 'select') {\n        const optionJSX = options?.map((option) => {\n            return (\n                <option key = { option.value } value = { option.value }>\n                    { option.name }\n                </option>\n            );\n        });\n        input = <select { ...register }>{ optionJSX }</select>;\n    }\n\n    return (\n        <>\n            <label>\n                <div>\n                    <span className = { styles.error }>{ error?.message }</span>\n                </div>\n\n                { label }\n            </label>\n            { input }\n        </>\n    );\n};\n\nInput.defaultProps = {\n    type: 'text',\n    tag:  'input',\n};\n\ninterface IInputPropsTypes {\n    placeholder: string;\n    type?: string;\n    tag?: string;\n    label?: string;\n    register: UseFormRegisterReturn;\n    error?: {\n        message?: string\n    }\n    options?: { value: string;name: string }[];\n}\n\n","import { useMutation } from 'react-query';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { AxiosError } from 'axios';\nimport { useEffect } from 'react';\nimport { api } from '../api/index';\nimport { authActions } from '../lib/redux/actions/auth';\nimport { ILoginFormShape } from '../types';\n\nexport const useLogin = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const mutation = useMutation((credentials: ILoginFormShape) => {\n        return api.users.login(credentials);\n    },\n    {\n        onError(error: AxiosError) {\n            const { response } = error;\n\n            if (response?.status === 401) {\n                dispatch(authActions.setError('Неверный логин или пароль. Проверьте корректность введённых данных.'));\n            } else {\n                dispatch(\n                    authActions.setError(\n                        'Ошибка запроса. Повторите через несколько минут или обратитесь к администратору.',\n                    ),\n                );\n            }\n        },\n    });\n\n    useEffect(() => {\n        if (mutation.isSuccess) {\n            const token = mutation?.data;\n            dispatch(authActions.setToken(token));\n            localStorage.setItem('token', token);\n            navigate('/');\n        }\n    }, [mutation.isSuccess]);\n\n    return mutation;\n};\n","// Core\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// styles\nimport styles from './styles/index.module.scss';\nimport { schema } from './config';\n\n// Components\nimport { Input } from '../../../../elements/customInput';\n\n// Hooks\nimport { useLogin } from '../../../../hooks/useLogin';\n\n// types\nimport { ILoginFormShape } from '../../../../types';\n\nexport const LoginForm: React.FC = () => {\n    const login = useLogin();\n    const form  = useForm({\n        mode:     'onTouched',\n        resolver: yupResolver(schema),\n    });\n\n    const onSubmit = form.handleSubmit(async (credentials: ILoginFormShape) => {\n        await login.mutateAsync(credentials);\n        form.reset();\n    });\n\n    return (\n        <section className = { styles.login }>\n            <div className = { styles.content } >\n                <h1>Добро пожаловать!</h1>\n                <div className = { styles.inputRow }>\n                    <Input\n                        label = 'Электропочта'\n                        error = { form.formState.errors.email }\n                        register = { form.register('email') }\n                        type = 'email'\n                        placeholder = 'Введите свою электропочту' />\n                </div>\n                <div className = { styles.inputRow }>\n                    <Input\n                        label = 'Пароль'\n                        type = 'password'\n                        error = { form.formState.errors.password }\n                        register = { form.register('password') }\n                        placeholder = 'Введите свой пароль' />\n                </div>\n                <div>\n                    <button type = 'submit' onClick = { onSubmit }>Войти в систему</button>\n                    <div className = { styles.loginLink }>\n                        <span>Если у вас нет аккаунта, пожалуйста\n                            <Link to = '/registration'> зарегистрируйтесь</Link>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n","import * as yup from 'yup';\n\n// eslint-disable-next-line no-template-curly-in-string\nconst tooShortMessage = 'минимальная длина = ${min} символов';\n\n// eslint-disable-next-line no-template-curly-in-string\nconst tooLongMessage = 'максимальная длина = ${min} символов';\n\nexport const schema = yup.object().shape({\n    fname: yup\n        .string()\n        .min(5, tooShortMessage)\n        .max(40, tooLongMessage)\n        .required('*'),\n    lname: yup\n        .string()\n        .min(5, tooShortMessage)\n        .max(40, tooLongMessage)\n        .required('*'),\n    email: yup\n        .string()\n        .email()\n        .required('*'),\n    password: yup\n        .string()\n        .min(8, tooShortMessage)\n        .max(16, tooLongMessage)\n        .required('*'),\n    age: yup\n        .number()\n        .required('*')\n        .max(99),\n    height: yup\n        .number()\n        .required('*'),\n    weight: yup\n        .number()\n        .required('*'),\n});\n\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useMutation } from 'react-query';\nimport { useNavigate } from 'react-router-dom';\nimport { authActions } from '../lib/redux/actions/auth';\nimport { api } from '../api/index';\nimport { IProfile } from '../types/index';\n\nexport const useSignUp = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const mutation = useMutation((payload: IProfile) => {\n        return api.users.create(payload);\n    });\n\n\n    useEffect(() => {\n        if (mutation.isSuccess) {\n            const token = mutation?.data;\n            dispatch(authActions.setToken(token));\n            localStorage.setItem('token', token);\n            navigate('/');\n        }\n    }, [mutation.isSuccess]);\n\n    return mutation;\n};\n","// Core\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport cx from 'classnames';\n\n// Components\nimport { Input } from '../../../../elements/customInput';\nimport { schema } from './config';\n\n// styles\nimport styles from './styles/index.module.scss';\nimport profile from '../profile/styles/index.module.scss';\n\n// hooks\nimport { useSignUp } from '../../../../hooks/useSignUp';\n\n// types\nimport { IProfile } from '../../../../types';\n\nexport const SignUp = () => {\n    const signUp = useSignUp();\n    const [gender, setGender] = useState('');\n    const form = useForm({\n        mode:     'onTouched',\n        resolver: yupResolver(schema),\n    });\n\n    const onSubmit = form.handleSubmit(async (user: IProfile) => {\n        const profileState = {\n            sex:      gender,\n            fname:    user.fname,\n            lname:    user.lname,\n            password: user.password,\n            age:      user.age,\n            email:    user.email,\n            height:   user.height,\n            weight:   user.weight,\n\n        };\n        await signUp.mutateAsync(profileState);\n        form.reset();\n    });\n\n    const classNamesF = cx(profile.female, {\n        [ profile.selected ]: gender === 'f',\n    });\n\n    const classNamesM = cx(profile.male, {\n        [ profile.selected ]: gender === 'm',\n    });\n\n    return (\n        <section className = { styles.registration }>\n            <div className = { styles.left } >\n                <div\n\n                    className = { profile.profile }>\n                    <h1>Профиль</h1>\n                    <div className = { profile.gender }>\n                        <div\n                            onClick = { () => setGender('f') }\n                            className = { classNamesF }>\n                            <span >Женщина</span>\n                        </div>\n                        <div\n                            onClick = { () => setGender('m') }\n                            className = { classNamesM }>\n                            <span >Мужчина</span>\n                        </div>\n                    </div>\n                    <div className = { profile.inputRow }>\n                        <Input\n                            label = 'Электропочта'\n                            type = 'text'\n                            register = { form.register('email') }\n                            error = { form.formState.errors.email }\n                            placeholder = 'Введите свой email' />\n                    </div>\n\n                    <div className = { profile.inputRow }>\n                        <Input\n                            label = 'Имя'\n                            type = 'text'\n                            register = { form.register('fname') }\n                            error = { form.formState.errors.fname }\n                            placeholder = 'Введите свое имя' />\n                    </div>\n\n                    <div className = { profile.inputRow }>\n                        <Input\n                            label = 'Имя'\n                            type = 'text'\n                            register = { form.register('lname') }\n                            error = { form.formState.errors.lname }\n                            placeholder = 'Введите свою фамилию' />\n                    </div>\n\n                    <div className = { profile.inputRow }>\n                        <Input\n                            label = 'Пароль'\n                            type = 'password'\n                            register = { form.register('password') }\n                            error = { form.formState.errors.password }\n                            placeholder = 'Введите свой пароль' />\n                    </div>\n\n                    <div className = { profile.inputRow }>\n                        <Input\n                            label = 'Возраст'\n                            type = 'number'\n                            register = { form.register('age') }\n                            error = { form.formState.errors.age }\n                            placeholder = 'Введите свой возраст' />\n                    </div>\n\n                    <div className = { profile.inputRow }>\n                        <Input\n                            label = 'Рост'\n                            type = 'number'\n                            register = { form.register('height') }\n                            error = { form.formState.errors.height }\n\n                            placeholder = 'Введите свой рост' />\n                    </div>\n\n                    <div className = { profile.inputRow }>\n                        <Input\n                            label = 'Вес'\n                            type = 'number'\n                            register = { form.register('weight') }\n                            error = { form.formState.errors.weight }\n\n                            placeholder = 'Введите свой вес' />\n                    </div>\n                    <div className = { profile.controls }>\n                        <button className = { profile.clearData } >Сбросить</button>\n                        <button type = 'submit' onClick = { onSubmit }>Зарегистрироваться</button>\n                    </div>\n                </div>\n\n            </div>\n            <div className = { styles.right }>\n            </div>\n        </section>\n    );\n};\n","// Core\nimport { useEffect, useState } from 'react';\nimport cx from 'classnames';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    setRecordScoreAsync, setScoreAsync, setUpdateScoreAsync,\n} from '../../lib/redux/actions/score';\nimport { getRecordedScore, getToken } from '../../lib/redux/selectors/auth';\n\n// styles\nimport styles from './styles/index.module.scss';\n\n// types\nimport { ValueType } from '../../types';\n\n\nexport const  CustomQuestionSelector = ({\n    question, answer1, answer2, answer3, value1, value2, value3,\n}: IQuestionSelectorProps) => {\n    const dispatch = useDispatch();\n    const recordedScore = useSelector(getRecordedScore);\n    const token = useSelector(getToken);\n    const hash = recordedScore?.hash;\n    const value = recordedScore?.value;\n\n    const [valueRecord, setValueRecord] = useState<ValueType>();\n\n    const classNamesA1 = cx(styles.answer, {\n        [ styles.selected ]: valueRecord === value1,\n    });\n\n    const classNamesA2 = cx(styles.answer, {\n        [ styles.selected ]: valueRecord === value2,\n    });\n\n    const classNamesA3 = cx(styles.answer, {\n        [ styles.selected ]: valueRecord === value3,\n    });\n\n\n    const  onSubmit = () => {\n        if (valueRecord) {\n            const record = {\n                type:   window.location.pathname.slice(1),\n                record: valueRecord,\n            };\n            if (hash) {\n                dispatch(setUpdateScoreAsync(record, hash));\n            } else {\n                dispatch(setRecordScoreAsync(record, token));\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (recordedScore) {\n            dispatch(setScoreAsync());\n        }\n        if (hash) {\n            setValueRecord(value);\n        }\n    }, [recordedScore]);\n\n\n    return (\n        <div className = { styles.question }>\n            <h1>{ question }</h1>\n            <div className = { styles.answers }>\n                <span\n                    className = { classNamesA1 } onClick = { () => setValueRecord(value1) }>\n                    { answer1 }\n                </span>\n                <span\n                    className = { classNamesA2 } onClick = { () => setValueRecord(value2) }\n                    defaultValue = 'light'>\n                    { answer2 }\n                </span>\n                { answer3\n                    ? <span\n                        className = { classNamesA3 } onClick = { () => setValueRecord(value3) }\n                        defaultValue = 'heavy'>{ answer3 }</span>\n                    : null }\n            </div>\n            <button\n                onClick = { () => onSubmit() }\n                disabled = { !valueRecord }\n                className = { styles.sendAnswer }>Ответить</button>\n        </div>\n    );\n};\n\n\ninterface IQuestionSelectorProps{\n    question: string,\n    answer1: string,\n    answer2: string,\n    answer3?: string,\n    value1: ValueType,\n    value2: ValueType,\n    value3?: ValueType,\n\n}\n","import { RootState } from '../init/store';\n\nexport const getRecord = (state: RootState) => {\n    return state.score.getRecord;\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getRecordScoreAsync } from '../lib/redux/actions/score';\nimport { getRecord } from '../lib/redux/selectors/score';\n\nexport const useGetRecord = (type: string) => {\n    const dispatch = useDispatch();\n    const record = useSelector(getRecord);\n\n    useEffect(() => {\n        if (typeof record === 'undefined') {\n            dispatch(getRecordScoreAsync(type));\n        }\n    }, [record, type]);\n};\n","\nimport { CustomQuestionSelector } from '../../../../elements/customQuestionSelector';\nimport { useGetRecord } from '../../../../hooks/useGetRecord';\n\n\nexport const Breakfast: React.FC = () => {\n    useGetRecord('breakfast');\n\n    return (\n        <>\n            <CustomQuestionSelector\n                question = 'Ты сегодня завтракал?'\n                answer1 = 'Я не завтракал'\n                value1 = 'none'\n                answer2 = 'У меня был легкий завтрак'\n                value2 = 'light'\n                answer3 = 'Я очень плотно покушал'\n                value3 = 'heavy' />\n        </>\n    );\n};\n","\nimport { CustomQuestionSelector } from '../../../../elements/customQuestionSelector';\nimport { useGetRecord } from '../../../../hooks/useGetRecord';\n\nexport const Lunch = () => {\n    useGetRecord('lunch');\n\n    return (\n        <>\n            <CustomQuestionSelector\n                question = 'Ты сегодня обедал?'\n                answer1 = 'Я не обедал'\n                value1 = 'none'\n                answer2 = 'У меня был легкий обед'\n                value2 = 'light'\n                answer3 = 'Я очень плотно покушал'\n                value3 = 'heavy' />\n        </>\n    );\n};\n","import { CustomQuestionSelector } from '../../../../elements/customQuestionSelector';\nimport { useGetRecord } from '../../../../hooks/useGetRecord';\n\n\nexport const Dinner = () => {\n    useGetRecord('dinner');\n\n    return (\n        <>\n            <CustomQuestionSelector\n                question = 'Ты сегодня ужинал?'\n                answer1 = 'Я не ужинал'\n                value1 = 'none'\n                answer2 = 'У меня был легкий ужин'\n                value2 = 'light'\n                answer3 = 'Я очень плотно покушал'\n                value3 = 'heavy' />\n        </>\n    );\n};\n","\nimport { CustomQuestionSelector } from '../../../../elements/customQuestionSelector';\nimport { useGetRecord } from '../../../../hooks/useGetRecord';\n\nexport const Fruits = () => {\n    useGetRecord('fruits');\n\n    return (\n        <>\n            <CustomQuestionSelector\n                question = 'Ты сегодня кушал фрукты?'\n                answer1 = 'Да'\n                value1 = { true }\n                answer2 = 'Нет'\n                value2 = { false } />\n        </>\n    );\n};\n","\nimport { CustomQuestionSelector } from '../../../../elements/customQuestionSelector';\nimport { useGetRecord } from '../../../../hooks/useGetRecord';\n\nexport const Vegetables = () => {\n    useGetRecord('vegetables');\n\n    return (\n        <>\n            <CustomQuestionSelector\n                question = 'Ты сегодня кушал овощи?'\n                answer1 = 'Да'\n                value1 = { true }\n                answer2 = 'Нет'\n                value2 = { false } />\n        </>\n    );\n};\n","import { CustomQuestionSelector } from '../../../../elements/customQuestionSelector';\nimport { useGetRecord } from '../../../../hooks/useGetRecord';\n\nexport const Junk = () => {\n    useGetRecord('junk');\n\n    return (\n        <>\n            <CustomQuestionSelector\n                question = 'Ты сегодня кушал фаст-фуд?'\n                answer1 = 'Да'\n                value1 = { true }\n                answer2 = 'Нет'\n                value2 = { false } />\n        </>\n    );\n};\n","// Core\nimport { useEffect, useState } from 'react';\nimport cx from 'classnames';\n\n// styles\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './styles/index.module.scss';\nimport { setRecordScoreAsync, setScoreAsync, setUpdateScoreAsync } from '../../lib/redux/actions/score';\nimport { getRecordedScore, getToken } from '../../lib/redux/selectors/auth';\n\nexport const CustomQuestionCheckboxes\n= ({ title }: IPropsType) => {\n    const dispatch = useDispatch();\n    const token = useSelector(getToken);\n    const recordedScore = useSelector(getRecordedScore);\n    const [currentValue, setCurrentValue] = useState(0);\n\n    const hash = recordedScore?.hash;\n    const value = recordedScore?.value;\n\n    const cupJSX = [...new Array(13)].map((_, index) => {\n        const isSelected = currentValue > index;\n        const cupCx = cx(styles.element, {\n            [ styles.selected ]: isSelected,\n        });\n\n        const clickSelected = () => {\n            const checkedKey = index + 1;\n            const leftKey = index - 1;\n\n            if (currentValue === checkedKey) {\n                setCurrentValue(leftKey);\n            } else {\n                setCurrentValue(checkedKey);\n            }\n        };\n\n        return (\n            <button\n                key = { String(index) }\n                className = { cupCx }\n                onClick = { clickSelected } />\n        );\n    });\n\n    const waterAmount = currentValue && currentValue * 250;\n\n    const onSubmit = () => {\n        const record = {\n            type:   window.location.pathname.slice(1),\n            record: currentValue,\n        };\n        if (hash) {\n            dispatch(setUpdateScoreAsync(record, token));\n        } else {\n            dispatch(setRecordScoreAsync(record, token));\n        }\n    };\n\n    useEffect(() => {\n        if (hash) {\n            setCurrentValue(value);\n        }\n        if (recordedScore) {\n            dispatch(setScoreAsync());\n        }\n    }, [recordedScore]);\n\n\n    return (\n        <div className = { styles.question }>\n            <h1>{ title }</h1>\n            <div className = { styles.elements }>\n                { cupJSX }\n                <span className = { styles.size }>{ waterAmount } мл</span>\n            </div>\n            <button\n                onClick = { onSubmit }\n                className = { styles.sendAnswer }>Ответить</button>\n        </div>\n    );\n};\n\nexport interface IPropsType{\n    title: string,\n\n}\n","\nimport  { CustomQuestionCheckboxes }  from '../../../../elements/customQuestionCheckboxes';\nimport { useGetRecord } from '../../../../hooks/useGetRecord';\n\nexport const Water = () => {\n    useGetRecord('water');\n\n\n    return (\n        <>\n            <CustomQuestionCheckboxes title = 'Сколько воды ты сегодня выпил?' />\n        </>\n    );\n};\n","// Core\nimport { useEffect, useState } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setRecordScoreAsync, setScoreAsync, setUpdateScoreAsync } from '../../lib/redux/actions/score';\nimport { getRecordedScore, getToken } from '../../lib/redux/selectors/auth';\n\n// styles\nimport styles from './styles/index.module.scss';\n\nexport const CustomQuestionInput = ({ questions, type, placeholder }: IQuestionInputProps) => {\n    const [valueRecord, setValueRecord] = useState('');\n    const dispatch = useDispatch();\n    const recordedScore = useSelector(getRecordedScore);\n    const token = useSelector(getToken);\n\n    const hash = recordedScore?.hash;\n    const value = recordedScore?.value;\n    const handleSubmit = () => {\n        const record = {\n            type:   window.location.pathname.slice(1),\n            record: valueRecord,\n        };\n        if (hash) {\n            dispatch(setUpdateScoreAsync(record, token));\n        } else {\n            dispatch(setRecordScoreAsync(record, token));\n        }\n    };\n\n    useEffect(() => {\n        if (recordedScore) {\n            dispatch(setScoreAsync());\n        }\n        if (hash) {\n            setValueRecord(value);\n        }\n    }, [recordedScore]);\n\n\n    return (\n\n        <div className = { styles.question }>\n            <h1>{ questions }</h1>\n            <div className = { styles.inputRow }>\n                <input\n                    type = { type }\n                    onChange = { (event) => setValueRecord(event.target.value) }\n                    placeholder = { placeholder } />\n            </div>\n            <button\n                onClick = { handleSubmit }\n                className = { styles.sendAnswer }>Ответить</button>\n        </div>\n    );\n};\n\n\ninterface IQuestionInputProps{\n    questions: string,\n    type: string,\n    placeholder: string\n}\n","\nimport { CustomQuestionInput } from '../../../../elements/customQuestionInput';\nimport { useGetRecord } from '../../../../hooks/useGetRecord';\n\nexport const Sleep = () => {\n    useGetRecord('sleep');\n\n    return (\n        <>\n            <CustomQuestionInput\n                questions = 'Сколько часов ты сегодня спал?'\n                type = 'number'\n                placeholder = 'Введите свое число' />\n        </>\n    );\n};\n","import * as yup from 'yup';\n\n// eslint-disable-next-line no-template-curly-in-string\nconst tooShortMessage = 'минимальная длина = ${min} символов';\n\n// eslint-disable-next-line no-template-curly-in-string\nconst tooLongMessage = 'максимальная длина = ${min} символов';\n\nexport const schema = yup.object().shape({\n    fname: yup\n        .string()\n        .min(5, tooShortMessage)\n        .max(40, tooLongMessage)\n        .required('*'),\n    lname: yup\n        .string()\n        .min(5, tooShortMessage)\n        .max(40, tooLongMessage)\n        .required('*'),\n    sex: yup\n        .string()\n        .required('*'),\n    email: yup\n        .string()\n        .email()\n        .required('*'),\n    age: yup\n        .number()\n        .required('*')\n        .max(99),\n    height: yup\n        .number()\n        .required('*'),\n    weight: yup\n        .number()\n        .required('*'),\n    password: yup\n        .string()\n        .min(9, tooShortMessage)\n        .max(16, tooLongMessage),\n});\n\n","// Core\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport cx from 'classnames';\nimport { useForm } from 'react-hook-form';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { scoreActions } from '../../../../lib/redux/actions/score';\nimport { getProfile } from '../../../../lib/redux/selectors/profile';\n// Components\nimport { Input } from '../../../../elements/customInput';\n\n// Hooks\nimport { useDeleteScore } from '../../../../hooks/useDeleteScore';\nimport { useUpdateProfile } from '../../../../hooks/useUpdateProfile';\n\n// types\nimport { IProfile } from '../../../../types';\nimport { schema } from './config';\n\n// styles\nimport Styles from './styles/index.module.scss';\n\nexport const Profile: React.FC = () => {\n    const profileInfo = useSelector(getProfile);\n    const updateProfile = useUpdateProfile();\n    const dispatch = useDispatch();\n    const deleteScore = useDeleteScore();\n    const form = useForm({\n        mode:          'onTouched',\n        resolver:      yupResolver(schema),\n        defaultValues: {\n            sex:      profileInfo?.sex,\n            fname:    profileInfo?.fname,\n            lname:    profileInfo?.lname,\n            email:    profileInfo?.email,\n            password: '',\n            age:      profileInfo?.age,\n            height:   profileInfo?.height,\n            weight:   profileInfo?.weight,\n        },\n    });\n\n    const genderM = cx(profileInfo?.sex === 'm' ? Styles.male : Styles.female, {\n        [ Styles.selected ]: profileInfo?.sex,\n    });\n\n    const deleteAllRecord = async () => {\n        const token = localStorage.getItem('token');\n        await deleteScore.mutateAsync(token);\n        dispatch(scoreActions.setScore(0));\n        dispatch(scoreActions.setRecordScore(null));\n    };\n\n\n    const onSubmit = form.handleSubmit(async (data: IProfile) => {\n        await updateProfile.mutateAsync(data);\n    });\n\n    return (\n        <div className = { Styles.profile }>\n            <h1>Профиль</h1>\n            <div className = { Styles.gender }>\n                <div className = { genderM }></div>\n            </div>\n            <div className = { Styles.inputRow }>\n                <Input\n                    label = 'Электропочта'\n                    type = 'text'\n                    register = { form.register('email') }\n                    error = { form.formState.errors.email }\n                    placeholder = 'Введите свой email' />\n            </div>\n            <div className = { Styles.inputRow }>\n                <Input\n                    label = 'Имя'\n                    type = 'text'\n                    register = { form.register('fname') }\n                    error = { form.formState.errors.fname }\n                    placeholder = 'Введите свое имя' />\n            </div>\n\n            <div className = { Styles.inputRow }>\n                <Input\n                    label = 'Имя'\n                    type = 'text'\n                    register = { form.register('lname') }\n                    error = { form.formState.errors.lname }\n                    placeholder = 'Введите свою фамилию' />\n            </div>\n            <div className = { Styles.inputRow }>\n                <Input\n                    label = 'Пароль'\n                    type = 'password'\n                    register = { form.register('password') }\n                    error = { form.formState.errors.password }\n                    placeholder = 'Введите свой пароль' />\n            </div>\n            <div className = { Styles.inputRow }>\n                <Input\n                    label = 'Возраст'\n                    type = 'number'\n                    register = { form.register('age') }\n                    error = { form.formState.errors.age }\n                    placeholder = 'Введите свой возраст' />\n            </div>\n\n            <div className = { Styles.inputRow }>\n                <Input\n                    label = 'Рост'\n                    type = 'number'\n                    register = { form.register('height') }\n                    error = { form.formState.errors.height }\n\n                    placeholder = 'Введите свой рост' />\n            </div>\n\n            <div className = { Styles.inputRow }>\n                <Input\n                    label = 'Вес'\n                    type = 'number'\n                    register = { form.register('weight') }\n                    error = { form.formState.errors.weight }\n\n                    placeholder = 'Введите свой вес' />\n            </div>\n            <div className = { Styles.controls }>\n                <button\n                    disabled = { !form.watch('password') }\n                    className = { Styles.clearData }>Сбросить</button>\n                <button\n                    onClick = { onSubmit }\n                    disabled = { !form.watch('password') }>Обновить</button>\n            </div>\n            <button\n                onClick = { deleteAllRecord }\n                className = { Styles.clearAllRecords }>Очистить все данные</button>\n        </div>\n    );\n};\n\n","import { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useMutation } from 'react-query';\nimport { profileActions } from '../lib/redux/actions/profile';\nimport { api } from '../api/index';\nimport { IProfile } from '../types/index';\n\nexport const useUpdateProfile = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const mutation = useMutation((info: IProfile) => {\n        const token = localStorage.getItem('token');\n\n        return api.users.updateMe(info, token);\n    });\n\n    useEffect(() => {\n        if (mutation.data?.data) {\n            dispatch(profileActions.updateProfile(mutation.data?.data));\n            navigate('/');\n        }\n    }, [mutation.isSuccess]);\n\n    return mutation;\n};\n","import { useMutation } from 'react-query';\nimport { api } from '../api/index';\n\nexport const useDeleteScore = () => {\n    const mutation = useMutation((token: string | null) => {\n        return api.tracker.removeAllRecords(token);\n    });\n\n\n    return mutation;\n};\n","import { CustomQuestionSelector } from '../../../../elements/customQuestionSelector';\nimport { useGetRecord } from '../../../../hooks/useGetRecord';\n\nexport const Coffee = () => {\n    useGetRecord('coffee');\n\n\n    return (\n        <>\n            <CustomQuestionSelector\n                question = 'Ты сегодня пил кофе?'\n                answer1 = 'Я не пил совсем'\n                value1 = 'none'\n                answer2 = 'Выпил 1 стакан'\n                value2 = 'light'\n                answer3 = 'Выпил 2 или больше стаканов'\n                value3 = 'heavy' />\n        </>\n    );\n};\n","\nimport { CustomQuestionInput } from '../../../../elements/customQuestionInput';\nimport { useGetRecord } from '../../../../hooks/useGetRecord';\n\nexport const Steps = () => {\n    useGetRecord('steps');\n\n\n    return (\n        <>\n            <CustomQuestionInput\n                questions = 'Сколько шагов ты сегодня прошел?'\n                type = 'number'\n                placeholder = 'Введите свое число' />\n        </>\n    );\n};\n","// Components\nimport {\n    Dashboard, DinnerPage, FruitsPage, JunkPage, LoginPage, LunchPage, ProfilePage, SignUpPage,\n    SleepPage, VegetablesPage, WaterPage,\n} from '../pages';\nimport { BreakfastPage } from '../pages/breakfastPage';\nimport { CoffeePage } from '../pages/coffeePage';\nimport { StepsPage } from '../pages/stepsPage';\n\nconst base = '/';\n\nexport const book = Object.freeze({\n    root: {\n        url:  `${base}`,\n        page: Dashboard,\n    },\n    login: {\n        url:  `${base}login`,\n        page: LoginPage,\n    },\n    registration: {\n        url:  `${base}registration`,\n        page: SignUpPage,\n    },\n    profile: {\n        url:  `${base}profile`,\n        page: ProfilePage,\n    },\n    breakfast: {\n        url:  `${base}breakfast`,\n        page: BreakfastPage,\n    },\n    coffee: {\n        url:  `${base}coffee`,\n        page: CoffeePage,\n    },\n    dinner: {\n        url:  `${base}dinner`,\n        page: DinnerPage,\n    },\n    fruits: {\n        url:  `${base}fruits`,\n        page: FruitsPage,\n    },\n    junk: {\n        url:  `${base}junk`,\n        page: JunkPage,\n    },\n    lunch: {\n        url:  `${base}lunch`,\n        page: LunchPage,\n    },\n    sleep: {\n        url:  `${base}sleep`,\n        page: SleepPage,\n    },\n    steps: {\n        url:  `${base}steps`,\n        page: StepsPage,\n    },\n    vegetables: {\n        url:  `${base}vegetables`,\n        page: VegetablesPage,\n    },\n    water: {\n        url:  `${base}water`,\n        page: WaterPage,\n    },\n});\n\nexport type BookType = typeof book;\n","import { LoginForm } from '../../bus/user/components/login';\n\nexport const LoginPage = () => {\n    return (\n        <>\n            <LoginForm />\n        </>\n    );\n};\n\n","import { SignUp } from '../../bus/user/components/registration';\n\nexport const SignUpPage = () => {\n    return (\n        <SignUp />\n    );\n};\n","import { Profile } from '../../bus/user/components/profile';\nimport { Base } from '../../views/base';\n\nexport const ProfilePage = () => {\n    return (\n        <>\n            <Base center disabledWidget>\n                <Profile  />\n            </Base>\n        </>\n    );\n};\n","import { Breakfast } from '../../bus/questions/components/Breakfast';\nimport { Base } from '../../views/base';\n\nexport const BreakfastPage = () => {\n    return (\n        <>\n            <Base>\n                <Breakfast />\n            </Base>\n        </>\n    );\n};\n\n","import { Coffee } from '../../bus/questions/components/Coffee';\nimport { Base } from '../../views/base';\n\nexport const CoffeePage = () => {\n    return (\n        <>\n            <Base>\n                <Coffee />\n            </Base>\n        </>\n    );\n};\n","import { Dinner } from '../../bus/questions/components/Dinner';\nimport { Base } from '../../views/base';\n\nexport const DinnerPage = () => {\n    return (\n        <>\n            <Base>\n                <Dinner />\n            </Base>\n        </>\n    );\n};\n","import { Fruits } from '../../bus/questions/components/Fruits';\nimport { Base } from '../../views/base';\n\nexport const FruitsPage = () => {\n    return (\n        <>\n            <Base>\n                <Fruits />\n            </Base>\n        </>\n    );\n};\n","import { Junk } from '../../bus/questions/components/Junk';\nimport { Base } from '../../views/base';\n\nexport const JunkPage = () => {\n    return (\n        <>\n            <Base>\n                <Junk />\n            </Base>\n        </>\n    );\n};\n","import { Lunch } from '../../bus/questions/components/Lunch';\nimport { Base } from '../../views/base';\n\nexport const LunchPage = () => {\n    return (\n        <>\n            <Base>\n                <Lunch />\n            </Base>\n        </>\n    );\n};\n","import { Sleep } from '../../bus/questions/components/Sleep';\nimport { Base } from '../../views/base';\n\nexport const SleepPage = () => {\n    return (\n        <>\n            <Base>\n                <Sleep />\n            </Base>\n        </>\n    );\n};\n","import { Steps } from '../../bus/questions/components/Steps';\nimport { Base } from '../../views/base';\n\nexport const StepsPage = () => {\n    return (\n        <>\n            <Base>\n                <Steps />\n            </Base>\n        </>\n    );\n};\n","import { Vegetables } from '../../bus/questions/components/Vegetables';\nimport { Base } from '../../views/base';\n\nexport const VegetablesPage = () => {\n    return (\n        <>\n            <Base>\n                <Vegetables />\n            </Base>\n        </>\n    );\n};\n","import { Water } from '../../bus/questions/components/Water';\nimport { Base } from '../../views/base';\n\nexport const WaterPage = () => {\n    return (\n        <>\n            <Base>\n                <Water />\n            </Base>\n        </>\n    );\n};\n","// Core\nimport { FC } from 'react';\nimport {\n    Route, Routes, Navigate,\n} from 'react-router-dom';\n\n// Routes\nimport { book } from './book';\n\nexport const RoutesComponent: FC = () => {\n    const routesJSX = Object\n        .values(book)\n        .map(({ url, page: Page }) => (\n            <Route\n                key = { url } path = { url }\n                element = { <Page /> } />\n        ));\n\n    return (\n        <>\n            <Routes>\n                { routesJSX }\n                <Route path = '*'  element = { <Navigate to = { book.login.url } replace /> } />\n            </Routes>\n        </>\n    );\n};\n","import { AnyAction } from 'redux';\nimport { authTypes } from '../types/auth';\n\nconst initialState = {\n    token:        '',\n    errorMessage: '',\n    error:        false,\n};\n\nexport const authReducer = (state = initialState, action: AnyAction) => {\n    switch (action.type) {\n        case authTypes.SET_TOKEN: {\n            return {\n                ...state,\n                token:        action.payload,\n                error:        false,\n                errorMessage: '',\n            };\n        }\n\n        case authTypes.RESET_ERROR: {\n            return {\n                ...state,\n                error:        false,\n                errorMessage: '',\n            };\n        }\n\n        case authTypes.SET_ERROR: {\n            return {\n                ...state,\n                error:        true,\n                errorMessage: action.payload,\n            };\n        }\n\n\n        default: {\n            return state;\n        }\n    }\n};\n","import { AnyAction } from 'redux';\nimport { scoreTypes } from '../types/score';\n\nconst initialState = {\n    score:         null,\n    isLoading:     false,\n    recordedScore: null,\n    getRecord:     null,\n};\n\n\nexport const scoreReducers = (state = initialState, action: AnyAction) => {\n    switch (action.type) {\n        case scoreTypes.SET_SCORE: {\n            return {\n                ...state,\n                score: action.payload,\n            };\n        }\n\n        case scoreTypes.SET_SCORE_ISLOADING: {\n            return {\n                ...state,\n                isLoading: action.payload,\n            };\n        }\n\n        case scoreTypes.SET_RECORD_SCORE: {\n            return {\n                ...state,\n                recordedScore: action.payload,\n            };\n        }\n\n        case scoreTypes.GET_RECORD_SCORE: {\n            return {\n                ...state,\n                recordedScore: action.payload,\n            };\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n","import { AnyAction } from 'redux';\nimport { IProfile } from '../../../types/index';\nimport { profileTypes } from '../types/profile';\n\nexport interface IProfileState{\n    user: IProfile[] | null,\n    isLoading: boolean\n}\n\nconst initialState: IProfileState = {\n    user:      null,\n    isLoading: false,\n};\n\nexport const profileReducers = (state = initialState, action: AnyAction) => {\n    switch (action.type) {\n        case profileTypes.SET_PROFILE: {\n            return {\n                ...state,\n                user: action.payload,\n            };\n        }\n\n        case profileTypes.IS_LOADING: {\n            return {\n                ...state,\n                isLoading: action.payload,\n            };\n        }\n\n        case profileTypes.UPDATE_PROFILE: {\n            return {\n                ...state,\n                user: action.payload,\n            };\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n","// Core\nimport { combineReducers } from 'redux';\n\n// Reducers\nimport { authReducer as auth } from '../reducers/auth';\nimport { scoreReducers as score } from '../reducers/score';\nimport { profileReducers as profile } from '../reducers/profile';\n\nexport const rootReducer = combineReducers({\n    auth, score, profile,\n});\n","// Core\nimport { compose, Middleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nexport const logger = createLogger({\n    duration:  true,\n    collapsed: true,\n    colors:    {\n        title: (action) => {\n            return action.error ? 'firebrick' : 'deepskyblue';\n        },\n        prevState: () => '#1C5FAF',\n        action:    () => '#149945',\n        nextState: () => '#A47104',\n        error:     () => '#ff0005',\n    },\n});\n\nconst developmentEnvironment = process.env.NODE_ENV === 'development';\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnhancers = developmentEnvironment && devtools ? devtools : compose;\n\nconst middleware: Middleware[] = [thunk];\n\nif (developmentEnvironment) {\n    middleware.push(logger);\n}\n\nexport { composeEnhancers, middleware };\n","// Core\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport {\n    createStore, applyMiddleware, AnyAction,\n} from 'redux';\n\n// Instruments\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { rootReducer } from './rootReducer';\nimport {\n    composeEnhancers,\n    middleware,\n} from './middleware';\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(...middleware)),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\nexport type Action = { type: string; payload: unknown; error?: boolean };\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, AnyAction>;\nexport type TDispatch = ThunkDispatch<RootState, void, AnyAction>;\nexport type AppDispatch = TDispatch;\n","import { QueryClient } from 'react-query';\n\nexport const queryClient = new QueryClient({\n    defaultOptions: {\n        queries: {\n            refetchOnWindowFocus: false,\n        },\n    },\n});\n","// Core\nimport { render } from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { configure } from 'mobx';\nimport { Provider } from 'react-redux';\n\n// Components\nimport { QueryClientProvider } from 'react-query';\n\n\n// Instruments\nimport { RoutesComponent } from './navigation';\nimport { store } from './lib/redux/init/store';\n\n// Styles\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './theme/index.scss';\nimport { queryClient } from './lib/react-query';\n\nconfigure({\n    enforceActions:             'always',\n    computedRequiresReaction:   true,\n    observableRequiresReaction: true,\n    reactionRequiresObservable: true,\n});\n\nrender(\n    <Provider store = { store }>\n        <QueryClientProvider client = { queryClient }>\n            <Router>\n                <RoutesComponent />\n            </Router>\n        </QueryClientProvider>\n    </Provider>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"styles_avatar__2mM1O\",\"column\":\"styles_column__jaBUK\",\"name\":\"styles_name__2ZU3D\",\"logout\":\"styles_logout__1P3xt\",\"male\":\"styles_male__1tzfZ\",\"female\":\"styles_female___yY_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"question\":\"styles_question__29rEQ\",\"elements\":\"styles_elements__vcOj2\",\"size\":\"styles_size__-ED2A\",\"element\":\"styles_element__30CMO\",\"selected\":\"styles_selected__3DhNz\",\"sendAnswer\":\"styles_sendAnswer__8KK7w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"styles_registration__2Q5dV\",\"left\":\"styles_left__1xOKe\",\"error\":\"styles_error__Zto3d\",\"right\":\"styles_right__rNge6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"styles_login__2ixsa\",\"loginLink\":\"styles_loginLink__1Vm10\",\"error\":\"styles_error__1y07b\",\"content\":\"styles_content__39i_H\",\"inputRow\":\"styles_inputRow__3VBwL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"styles_dashboard__xIU44\",\"navigation\":\"styles_navigation__GOETL\",\"items\":\"styles_items__Seqo3\",\"link\":\"styles_link__1B0Ib\",\"category0\":\"styles_category0__RBrxS\",\"category1\":\"styles_category1__1pEIx\",\"category2\":\"styles_category2__3h2uW\",\"category3\":\"styles_category3__3jdSM\",\"category4\":\"styles_category4__2xG17\",\"category5\":\"styles_category5__1qnLZ\",\"category6\":\"styles_category6__1Qu_Z\",\"category7\":\"styles_category7__2bSV0\",\"category8\":\"styles_category8__3lzHk\",\"category9\":\"styles_category9__2c_6W\",\"title\":\"styles_title__3od5F\",\"description\":\"styles_description__2jbj-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"question\":\"styles_question__2-KTD\",\"inputRow\":\"styles_inputRow__3tY49\",\"sendAnswer\":\"styles_sendAnswer__1z1KB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"styles_profile__2V7uj\",\"error\":\"styles_error__MEdlZ\",\"gender\":\"styles_gender__3RL80\",\"female\":\"styles_female__3Dev5\",\"male\":\"styles_male__3Tsp4\",\"selected\":\"styles_selected__1yGO2\",\"inputRow\":\"styles_inputRow__1tqJG\",\"controls\":\"styles_controls__1jpFc\",\"clearData\":\"styles_clearData__29yUt\",\"clearAllRecords\":\"styles_clearAllRecords__3rLK4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"styles_profile__1buE1\",\"sidebar\":\"styles_sidebar__318_W\",\"female\":\"styles_female__1TdUM\",\"male\":\"styles_male__2oM3k\",\"wrap\":\"styles_wrap__1vpk0\",\"header\":\"styles_header__1Dcw2\",\"homeLink\":\"styles_homeLink__2VkPX\",\"content\":\"styles_content__1C4tB\",\"center\":\"styles_center__1JZvj\",\"widget\":\"styles_widget__2Y3Ma\",\"title\":\"styles_title__3BY0k\",\"module\":\"styles_module__3LKEk\",\"score\":\"styles_score__2IKrT\",\"progress\":\"styles_progress__2qp6l\",\"fill\":\"styles_fill__7FQ4P\",\"label\":\"styles_label__3PQA_\",\"level1\":\"styles_level1__1Wcjq\",\"level2\":\"styles_level2__2Amah\",\"level3\":\"styles_level3__-BpJL\",\"level4\":\"styles_level4__3cWqp\",\"level5\":\"styles_level5__27Nvg\"};"],"sourceRoot":""}